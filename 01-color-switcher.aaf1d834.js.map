{"mappings":"iiBAsBA,IAAAA,EAAAC,EAAA,S,aAKAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,KAAM,CAAEC,WAAY,+BAGtB,IAAMC,EAAYC,SAASC,cAAc,yBACnCC,EAAgBF,SAASC,cAAc,sBACzCE,EAAYH,SAASC,cAAc,eACnCG,EAAaJ,SAASC,cAAc,gBACpCI,EAAeL,SAASC,cAAc,kBACtCK,EAAeN,SAASC,cAAc,kBAEpCM,EAAU,CACdC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIC,KACjBC,gBAAiB,EACjBC,aAAa,EACbC,QAAA,SAAQC,GAGFA,EAAc,GAAKR,EAAQG,YAC7BR,EAAcc,gBAAgB,aAE9Bd,EAAce,aAAa,WAAY,IACvCvB,EAAAF,GAASG,OAAOE,KAAK,sC,GAKrBqB,GAAa,EAAAC,EAAAC,SAAUrB,EAAWQ,GAIxC,SAASc,EAAeC,GACtB,OAAOA,EAAMC,WAAWC,SAAS,EAAG,I,CAHtCtB,EAAce,aAAa,WAAY,IAyBvCf,EAAcuB,iBAAiB,SAAS,WACtCvB,EAAce,aAAa,WAAY,IACvC,IAAIS,EAAWC,aAAY,WACzB,IAtBeC,EAGXC,EACAC,EACAC,EAiBAC,GAAc,IAAIrB,MAAOsB,UACzBC,EAAYhB,EAAWH,cAAc,GAAGkB,UAAYD,EAEpDG,GAzBWP,EAyBOM,EAtBlBL,EAASO,IAETL,EAAa,IADbD,EAAOD,MAYN,CAAEQ,KARIC,KAAKC,MAAMX,EAAKG,GAQdS,MANDF,KAAKC,MAAMX,EAAMG,EAAOD,GAMhBW,QAJNH,KAAKC,MAAMX,EAAOG,EAAOD,EAAQD,GAIlBa,QAFfJ,KAAKC,MAAMX,EAAQG,EAAOD,EAAQD,EAZnC,OAyBb1B,EAAUwC,YAActB,EAAec,EAAME,MAC7CjC,EAAWuC,YAActB,EAAec,EAAMK,OAC9CnC,EAAasC,YAActB,EAAec,EAAMM,SAChDnC,EAAaqC,YAActB,EAAec,EAAMO,SAE5CR,EAAY,KACdU,cAAclB,E,GAEf,I","sources":["src/js/01-color-switcher.js"],"sourcesContent":["// const buttonStart = document.querySelector('[data-start]');\n// const buttonStop = document.querySelector('[data-stop]');\n// const body = document.querySelector('body');\n// let timerId = null;\n\n// function getRandomHexColor() {\n//   return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n// }\n\n// buttonStart.addEventListener('click', () => {\n//   timerId = setInterval(() => {\n//     body.style.backgroundColor = getRandomHexColor();\n//     const buttonStart = document.querySelector('[data-start]').disabled = true;\n//   }, 1000);\n// });\n\n// buttonStop.addEventListener('click', () => {\n//     clearInterval(timerId);\n//     const buttonStart = (document.querySelector('[data-start]').disabled = false);\n// });\n\n\nimport Notiflix from 'notiflix';\nimport flatpickr from 'flatpickr';\n// Dodatkowy import stylÃ³w\nimport 'flatpickr/dist/flatpickr.min.css';\n\nNotiflix.Notify.init({\n  info: { background: 'hsla(360, 96%, 64%, 0.71)' },\n});\n\nconst inputDate = document.querySelector('input#datetime-picker');\nconst btnBeginCount = document.querySelector('button[data-start]');\nlet daysCount = document.querySelector('[data-days]');\nlet hoursCount = document.querySelector('[data-hours]');\nlet minutesCount = document.querySelector('[data-minutes]');\nlet secondsCount = document.querySelector('[data-seconds]');\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  weekNumbers: true,\n  onClose(selectedDates) {\n    // console.log(selectedDates[0]);\n\n    if (selectedDates[0] > options.defaultDate) {\n      btnBeginCount.removeAttribute('disabled');\n    } else {\n      btnBeginCount.setAttribute('disabled', '');\n      Notiflix.Notify.info('Please choose a date in the future');\n    }\n  },\n};\n\nconst datePicker = flatpickr(inputDate, options);\n\nbtnBeginCount.setAttribute('disabled', '');\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nbtnBeginCount.addEventListener('click', () => {\n  btnBeginCount.setAttribute('disabled', '');\n  let interval = setInterval(() => {\n    let currentTime = new Date().getTime();\n    let msToCount = datePicker.selectedDates[0].getTime() - currentTime;\n    // console.log(msToCount);\n    let timer = convertMs(msToCount);\n\n    daysCount.textContent = addLeadingZero(timer.days);\n    hoursCount.textContent = addLeadingZero(timer.hours);\n    minutesCount.textContent = addLeadingZero(timer.minutes);\n    secondsCount.textContent = addLeadingZero(timer.seconds);\n\n    if (msToCount < 1000) {\n      clearInterval(interval);\n    }\n  }, 1000);\n});\n\n"],"names":["$6JpON","parcelRequire","$parcel$interopDefault","Notify","init","info","background","$2ec2bf6e450c0fe9$var$inputDate","document","querySelector","$2ec2bf6e450c0fe9$var$btnBeginCount","$2ec2bf6e450c0fe9$var$daysCount","$2ec2bf6e450c0fe9$var$hoursCount","$2ec2bf6e450c0fe9$var$minutesCount","$2ec2bf6e450c0fe9$var$secondsCount","$2ec2bf6e450c0fe9$var$options","enableTime","time_24hr","defaultDate","Date","minuteIncrement","weekNumbers","onClose","selectedDates","removeAttribute","setAttribute","$2ec2bf6e450c0fe9$var$datePicker","$dbdyf","default","$2ec2bf6e450c0fe9$var$addLeadingZero","value","toString","padStart","addEventListener","interval","setInterval","ms","minute","hour","day","currentTime","getTime","msToCount","timer","second","days","Math","floor","hours","minutes","seconds","textContent","clearInterval"],"version":3,"file":"01-color-switcher.aaf1d834.js.map"}